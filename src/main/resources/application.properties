spring.application.name=Taxi Management

server.port=8000
#server.servlet.context-path=/tm
server.ssl.enabled=false

#spring.datasource.url=jdbc:mysql://localhost:3306/taximanagement
#spring.datasource.username=taxiuser
#spring.datasource.password=taxiuser
#
#spring.data.jpa.repositories.enabled=true
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL57Dialect
#spring.jpa.hibernate.ddl-auto = validate
#spring.jpa.show-sql=true
#spring.jpa.open-in-view=false
#spring.jpa.properties.hibernate.globally_quoted_identifiers=true

spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=TEST
spring.datasource.username=sa
spring.datasource.password=workbrain

spring.data.jpa.repositories.enabled=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.SQLServer2012Dialect
spring.jpa.hibernate.ddl-auto = create-drop
spring.jpa.show-sql=true
spring.jpa.open-in-view=false

spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB

#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console

spring.datasource.dbcp2.test-while-idle=true
spring.datasource.dbcp2.validation-query=SELECT 1

spring.queries.users-query=select username, password, active from users where username=?
spring.queries.roles-query=select u.username, r.role from users u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.username=?

# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
#spring.datasource.initialization-mode=always

logging.level.web=debug
# spring.devtools.add-properties=false
# spring.profiles.active=default
#spring.security.user.name=tmuser
#spring.security.user.password=1